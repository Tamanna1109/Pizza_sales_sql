CREATE DATABASE Pizzahut

CREATE TABLE Order_details
(
Order_details_id INT NOT NULL PRIMARY KEY,
Order_id INT NOT NULL,
Pizza_id TEXT NOT NULL,
Quantity INT NOT NULL
)

SELECT * FROM Order_details;

-- Retrieve the total number of orders placed.
SELECT * FROM Orders;
SELECT COUNT(Order_id) AS total_orders FROM orders;

-- Calculate the total revenue generated from pizza sales.

SELECT * FROM orders;
SELECT
ROUND(sum(order_details.Quantity * pizzas.price),2) AS total_sales 
FROM order_details JOIN pizzas ON 
pizzas.pizza_id =order_details.pizza_id

-- Identify the highest-priced pizza
SELECT * FROM pizzas;
SELECT * FROM pizza_types;

SELECT 
    pizza_types.name, pizzas.price
FROM
    pizza_types
        JOIN
    pizzas ON pizza_types.pizza_type_id = pizzas.pizza_type_id
ORDER BY pizzas.price DESC
LIMIT 1;

-- Identify the most common pizza size ordered.
SELECT * FROM order_details;

SELECT pizzas.size , COUNT(order_details.Order_details_id) AS order_count
FROM pizzas JOIN order_details
ON pizzas.pizza_id = order_details.Pizza_id
GROUP BY pizzas.size ORDER BY order_count DESC;

-- List the top 5 most ordered pizza types along with their quantities
 
 SELECT pizza_types.name,
 SUM(order_details.quantity) as quantity
 FROM pizza_types 
 JOIN pizzas
 ON pizza_types.pizza_type_id = pizzas.pizza_type_id
 JOIN order_details
 ON order_details.Pizza_id = pizzas.pizza_id
 GROUP BY pizza_types.name
 ORDER BY quantity DESC LIMIT 5;

-- Determine the distribution of orders by hour of the day.
SELECT * FROM orders;

SELECT HOUR (order_time) AS hour, COUNT(Order_id) FROM orders
GROUP BY HOUR(Order_time)

-- Join the necessary tables to find the total quantity of each pizza category ordered.

SELECT pizza_types.category,
SUM(order_details.quantity) AS quantity
FROM pizza_types
JOIN pizzas
ON pizza_types.pizza_type_id = pizzas.pizza_type_id
JOIN order_details
ON order_details.Pizza_id = pizzas.pizza_id
GROUP BY pizza_types.category
ORDER BY quantity DESC;

